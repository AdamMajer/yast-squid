{

// testedfiles: Squid.ycp

map READ = $[
    "squid" : $[
        "http_port" : ["localhost:3128", "80 transparent"],
        "acl" : ["QUERY urlpath_regex cgi-bin \\?",
                 "apache rep_header Server ^Apache",
                 "all src 0.0.0.0/0.0.0.0",
                 "manager proto cache_object",
                 "localhost src  \t  \t 127.0.0.1/255.255.255.255",
                 "localhost_public src 10.20.1.241/255.255.255.255",
                 "to_localhost dst 127.0.0.0/8",
                 "SSL_ports port  443",
                 "Safe_ports port 80",
                 "Safe_ports port 21",
                 "Safe_ports port    443",
                 "Safe_ports port 70",
                 "Safe_ports port 210",
                 "Safe_ports port 1025-65535",
                 "Safe_ports port 280",
                 "Safe_ports port 488",
                 "Safe_ports port 591",
                 "Safe_ports port 777",
                 "CONNECT method CONNECT"],
        "http_access" : ["allow manager localhost",
                         "deny manager",
                         "deny !Safe_ports",
                         "deny CONNECT  !SSL_ports",
                         "allow localhost",
                         "allow  localhost_public",
                         "deny all"],
       "refresh_pattern" : ["^ftp:\t\t1440\t20%\t10080",
                            "-i ^gopher:\t1440\t0%\t1440",
                            ".\t\t0\t20%\t4320"],

       "cache_dir" : ["ufs /var/cache/squid 100 16 256"],
       "cache_mem" : ["80 MB"],
       "cache_swap_low" : ["90"],
       "cache_swap_high" : ["95"],
       "maximum_object_size" : ["4096 KB"],
       "minimum_object_size" : ["0 KB"],
       "cache_replacement_policy" : ["lru"],
       "memory_replacement_policy" : ["heap GDSF"],

       "access_log" : ["/var/log/squid/access.log"],
       "cache_log" : ["/var/log/squid/cache.log"],
       "cache_store_log" : ["/var/log/squid/store.log"],
       "cache_swap_log" : ["none"],
       "emulate_httpd_log" : ["off"],

       "connect_timeout" : ["2 minutes"],
       "client_lifetime" : ["1 day"],

       "error_directory" : ["/usr/share/squid/errors/English"],
       "cache_mgr" : ["webmaster"],
       "ftp_passive" : ["on"]
    ]
];

map WRITE = $[];
map EXECUTE = $[];

include "testsuite.ycp";
//TESTSUITE_INIT([READ,WRITE,EXECUTE], nil);

import "Squid";

DUMP("Squid::readHttpPorts()");
TEST(``(Squid::readHttpPorts()), [READ], nil);
DUMP("Squid::http_ports");
TEST(``(Squid::http_ports), [], nil);

DUMP("------------------------------");

DUMP("Squid::readHttpAccesses()");
TEST(``(Squid::readHttpAccesses()), [READ], nil);
DUMP("Squid::http_accesses");
TEST(``(Squid::http_accesses), [], nil);

DUMP("------------------------------");

DUMP("Squid::readRefreshPatterns()");
TEST(``(Squid::readRefreshPatterns()), [READ], nil);
DUMP("Squid::refresh_patterns");
TEST(``(Squid::refresh_patterns), [], nil);

DUMP("------------------------------");

DUMP("Squid::readACLs()");
TEST(``(Squid::readACLs()), [READ], nil);
DUMP("Squid::acls");
TEST(``(Squid::acls), [], nil);

DUMP("------------------------------");

DUMP("Squid::readRestSetting()");
TEST(``(Squid::readRestSetting()), [READ], nil);
DUMP("Squid::settings");
TEST(``(Squid::settings), [], nil);

DUMP("------------------------------");

DUMP("Squid::Read()");
TEST(``(Squid::Read()), [READ], nil);
DUMP("Squid::settings");
TEST(``(Squid::settings), [], nil);
DUMP("Squid::acls");
TEST(``(Squid::acls), [], nil);
DUMP("Squid::refresh_patterns");
TEST(``(Squid::refresh_patterns), [], nil);
DUMP("Squid::http_accesses");
TEST(``(Squid::http_accesses), [], nil);
DUMP("Squid::http_ports");
TEST(``(Squid::http_ports), [], nil);


/* Testing of using default values: */
DUMP("------------------------------");
DUMP("----testing defualt values----");
READ["squid"] = remove(READ["squid"]:$[], "cache_mem");
READ["squid"] = remove(READ["squid"]:$[], "memory_replacement_policy");

DUMP("Squid:Read()");
TEST(``(Squid::Read()), [READ], nil);

DUMP("Squid::settings[\"cache_mem\"]:[\"1\"] == Squid::parameters[\"cache_mem\"]:[\"2\"]");
TEST(``(Squid::settings["cache_mem"]:["1"] == Squid::parameters["cache_mem"]:["2"]), [], nil);

DUMP("Squid::settings[\"memory_replacement_policy\"]:[\"1\"] == Squid::parameters[\"memory_replacement_memory\"]:[\"2\"]");
TEST(``(Squid::settings["memory_replacement_policy"]:["1"] == Squid::parameters["memory_replacement_policy"]:["2"]), [], nil);
}
/* vim: set sw=4 ts=4 et ft=ycp : */
